# create a resource group

resource "azurerm_resource_group" "test-rg" {
  name     = var.name
  location = var.location
}

# Create database and storage account#
resource "azurerm_sql_server" "sqlserver" {
  name                         = "sqlserver"
  resource_group_name          = azurerm_resource_group.test-rg.name
  location                     = azurerm_resource_group.test-rg.location
  version                      = "12.0"
  administrator_login          = "4dm1n157r470r"
  administrator_login_password = "4-v3ry-53cr37-p455w0rd"

  tags = {
    environment = "production"
  }
}

resource "azurerm_storage_account" "mystorage" {
  name                     = "mysa"
  resource_group_name      = azurerm_resource_group.test-rg.name
  location                 = azurerm_resource_group.test-rg.location
  account_tier             = "Standard"
  account_replication_type = "LRS"
}

resource "azurerm_sql_database" "example" {
  name                = "myexamplesqldatabase"
  resource_group_name = azurerm_resource_group.test-rg.name
  location            = azurerm_resource_group.test-rg.location
  server_name         = azurerm_sql_server.example.name

  tags = {
    environment = "production"
  }
}

# create networkimg# 

resource "azurerm_virtual_network" "vnet01" {
  name                = "vnet01"
  resource_group_name = var.resource_group
  location            = var.location
  address_space       = [var.vnetcidr]
}

resource "azurerm_subnet" "storage-subnet" {
  name                 = "storage-subnet"
  virtual_network_name = azurerm_virtual_network.vnet01.name
  resource_group_name  = var.resource_group
  address_prefixes     = [var.storagesubnet]
}

resource "azurerm_subnet" "aks-subnet" {
  name                 = "aks-subnet"
  virtual_network_name = azurerm_virtual_network.vnet01.name
  resource_group_name  = var.resource_group
  address_prefixes     = [var.aksubnetcidr]
}

resource "azurerm_subnet" "db-subnet" {
  name                 = "db-subnet"
  virtual_network_name = azurerm_virtual_network.vnet01.name
  resource_group_name  = var.resource_group
  address_prefixes     = [var.dbsubnetcidr]
}



# Azure Kubernetes Service  #

resource "azurerm_kubernetes_cluster" "aks_test" {
  name                = "${var.prefix}-aks01"
  location            = "${var.location}"
  resource_group_name = "${var.resource_group_name}"
  dns_prefix          = "${var.prefix}-aks01"
  kubernetes_version = "${var.k8sversion}"

  default_node_pool {
    name                = "${var.prefix}akspool"
    node_count          = "${var.agent_count}"
    orchestrator_version = "${var.k8sversion}"
    vm_size             = "${var.vm_type}"
    type                = "VirtualMachineScaleSets"
    zones  = ["1", "2"]
    enable_auto_scaling = true
    min_count           = 2
    max_count           = 4
    os_disk_size_gb     = 50

    vnet_subnet_id = azurerm_subnet.aks-subnet.id
linux_os_config {
  sysctl_config {
      vm_max_map_count=262144
   } 
    }
  }


  identity {
    type = "SystemAssigned"
  }

  azure_policy_enabled = false

  network_profile {
    network_plugin    = "azure"
    load_balancer_sku = "standard"
  }

# Enable the Ingress controller for the AKS cluster.
http_application_routing_enabled = true

  tags = {
    Team = "${var.env}"
    Owner = "${var.owner}"
  }

}

 # create APIM#
resource "azurerm_api_management" "api" {
  name                = "apiservice${random_string.azurerm_api_management_name.result}"
  location            = azurerm_resource_group.test-rg.location
  resource_group_name = azurerm_resource_group.test-rg.name
  publisher_email     = var.publisher_email
  publisher_name      = var.publisher_name
  sku_name            = "${var.sku}_${var.sku_count}"
}



# Create CDN profile# 
resource "azurerm_resource_group" "example" {
  name     = "example-resources"
  location = "West Europe"
}

resource "azurerm_cdn_profile" "example" {
  name                = "example-cdn"
  location            = azurerm_resource_group.example.location
  resource_group_name = azurerm_resource_group.example.name
  sku                 = "Standard_Verizon"
}

resource "azurerm_cdn_endpoint" "example" {
  name                = "example"
  profile_name        = azurerm_cdn_profile.example.name
  location            = azurerm_resource_group.example.location
  resource_group_name = azurerm_resource_group.example.name

  origin {
    name      = "example"
    host_name = "www.contoso.com"
  }
}
